stages:
  - test

test_blockchain:
  stage: test
  image: node:latest
  script:
    - cd blockchain
    - cp .env.example .env
    - yarn install
    - npx hardhat test
    - npx hardhat coverage > coverage.txt
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: blockchain/coverage.txt

test_backend:
  stage: test
  image: python:latest
  services:
    - mongo:latest
  script:
    - cd backend
    - pip install -r requirements.txt
    - cp .env.example .env
    - echo "DATABASE_URL=mongodb://mongo:27017/mytestdb" >> .env
    - python3 manage.py makemigrations
    - python3 manage.py migrate
    - coverage run --source='.' manage.py test
    - coverage report -m
    - coverage xml -i
  coverage: "/TOTAL.+ ([0-9]{1,3}%)/"
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: backend/coverage.xml

test_frontend:
  stage: test
  image: node:latest
  script:
    - cd frontend
    - cp .env.example .env
    - yarn install
    - yarn test
    - yarn test:ci
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  artifacts:
    paths:
      - frontend/coverage
    when: always
    reports:
      junit:
        - frontend/junit.xml
