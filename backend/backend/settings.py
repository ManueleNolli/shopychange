"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.1.9.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
import json
import sys
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-(hfuae=+66m0_1dj&s8ute_6pv%@ilbp26-dm+7+3z&wx-j5#)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blockchainAPI',
    'marketplaceAPI',
    'databaseAPI',
    'graphene_django',
    'graphene_federation',
    'corsheaders',

]

GRAPHENE = {
    'SCHEMA': 'backend.federated_schema.schema',
}

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# Read database url from .env file
envDB = environ.Env(
    DATABASE_URL=(
        str, 'mongodb://root:shopychange@localhost:27017/?authMechanism=DEFAULT')
)
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))
DATABASE_URL = envDB('DATABASE_URL')

DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'CLIENT': {
            'host': DATABASE_URL,
            'name': 'shopychangeDB',
        },
    },
    'test': {
        'ENGINE': 'djongo',
        'CLIENT': {
            'host': DATABASE_URL,
            'name': 'shopychangeDBtest',
        },
    }
}

if 'test' in sys.argv:
    DATABASES['default'] = DATABASES['test']


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Environment variables

# Take environment variables from .env file
env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

ALCHEMY_API_KEY = env('ALCHEMY_API_KEY')
SEPOLIA_MARKETPLACE_ADDRESS = env('SEPOLIA_MARKETPLACE_ADDRESS')
SEPOLIA_SHOPYCHANGE_ERC721_FACTORY_ADDRESS = env(
    'SEPOLIA_SHOPYCHANGE_ERC721_FACTORY_ADDRESS')
LOCAL_MARKETPLACE_ADDRESS = env('LOCAL_MARKETPLACE_ADDRESS')
LOCAL_SHOPYCHANGE_ERC721_FACTORY_ADDRESS = env(
    'LOCAL_SHOPYCHANGE_ERC721_FACTORY_ADDRESS')

SEPOLIA_CHAIN_ID = env('SEPOLIA_CHAIN_ID')
LOCAL_CHAIN_ID = env('LOCAL_CHAIN_ID')
ERC2981_MULTI_RECEIVER_ID = env('ERC2981_MULTI_RECEIVER_ID')
ERC2981_ID = env('ERC2981_ID')

####################
# ABI files        #
####################

# marketpalce
marketplacePath = os.path.join(
    BASE_DIR, 'contracts', 'ShopychangeMarketplace.json')

with open(marketplacePath, 'r') as file:
    data = json.load(file)

marketplaceABI = data['abi']


# factory
factoryERC721Path = os.path.join(
    BASE_DIR, 'contracts', 'ShopychangeERC721Factory.json')

with open(factoryERC721Path, 'r') as file:
    data = json.load(file)

factoryERC721ABI = data['abi']


# erc721 boilerplate
boilerplateErc721Path = os.path.join(
    BASE_DIR, 'contracts', 'BoilerplateERC721.json')

with open(boilerplateErc721Path, 'r') as file:
    data = json.load(file)

boilerplateErc721ABI = data['abi']


# erc2981 multireceiver
Erc2981MultiReceiverPath = os.path.join(
    BASE_DIR, 'contracts', 'ERC2981MultiReceiver.json')

with open(Erc2981MultiReceiverPath, 'r') as file:
    data = json.load(file)

erc2981MultiReceiverABI = data['abi']

# payment splitter
paymentSplitterPath = os.path.join(
    BASE_DIR, 'contracts', 'ShopychangePaymentSplitter.json')

with open(paymentSplitterPath, 'r') as file:
    data = json.load(file)

paymentSplitterABI = data['abi']
